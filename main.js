!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},t=(e,t,o)=>{const n=t.id+"-error";e.querySelector("#"+n).textContent="",t.classList.remove(o.inputErrorClass)},o=(e,t,o)=>{(e=>e.some((e=>!e.validity.valid)))(e)?n(t,o):(t.classList.remove(o.inactiveButtonClass),t.disabled=!1)},n=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)},r=[{name:"Val Thorens",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/spots/1-photo-by-moritz-feldmann-from-pexels.jpg"},{name:"Restaurant terrace",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/spots/2-photo-by-ceiline-from-pexels.jpg"},{name:"An outdoor cafe",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/spots/3-photo-by-tubanur-dogan-from-pexels.jpg"},{name:"A very long bridge, over the forest and through the trees",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/spots/4-photo-by-maurice-laschet-from-pexels.jpg"},{name:"Tunnel with morning light",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/spots/5-photo-by-van-anh-nguyen-from-pexels.jpg"},{name:"Mountain house",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/spots/6-photo-by-moritz-feldmann-from-pexels.jpg"}];console.log(r);const a=document.querySelector(".profile__edit-btn"),c=document.querySelector(".profile__add-btn"),l=document.querySelector(".profile__name"),s=document.querySelector(".profile__description"),i=document.querySelector("#edit-profile-modal"),d=i.querySelector(".modal__form"),u=i.querySelector(".modal__close-btn"),m=i.querySelector("#profile-name-input"),p=i.querySelector("#profile-description-input"),_=document.querySelector("#add-card-modal"),y=_.querySelector(".modal__form"),f=_.querySelector(".modal__submit-btn"),v=_.querySelector(".modal__close-btn"),S=_.querySelector("#add-card-name-input"),q=_.querySelector("#add-card-link-input"),g=document.querySelector("#preview-modal"),b=g.querySelector(".modal__image"),h=g.querySelector(".modal__caption"),w=g.querySelector(".modal__close-btn_type_preview"),k=document.querySelector("#card-template"),E=document.querySelector(".cards__list");function L(e){console.log(e);const t=k.content.querySelector(".card").cloneNode(!0),o=t.querySelector(".card__title"),n=t.querySelector(".card__image");n.src=e.link,n.alt=e.name,o.textContent=e.name;const r=t.querySelector(".card__like-btn");return r.addEventListener("click",(()=>{r.classList.toggle("card__like-button_liked")})),t.querySelector(".card__delete-btn").addEventListener("click",(()=>{t.remove()})),n.addEventListener("click",(()=>{C(g),b.src=e.link,b.alt=e.name,h.textContent=e.name})),t}function C(e){e.classList.add("modal_opened"),document.addEventListener("keydown",z),e.addEventListener("mousedown",j)}function x(e){e.classList.remove("modal_opened"),document.removeEventListener("keydown",z),e.removeEventListener("mousedown",j)}function z(e){"Escape"===e.key&&x(document.querySelector(".modal_opened"))}function j(e){e.target.classList.contains("modal")&&x(e.target)}var B;a.addEventListener("click",(()=>{var o,n;m.value=l.textContent,p.value=s.textContent,o=d,n=e,[m,p].forEach((e=>{t(o,e,n)})),C(i)})),u.addEventListener("click",(e=>{x(i)})),c.addEventListener("click",(()=>{C(_)})),v.addEventListener("click",(e=>{x(_)})),w.addEventListener("click",(()=>{x(g)})),d.addEventListener("submit",(function(e){e.preventDefault(),l.textContent=m.value,s.textContent=p.value,x(i)})),y.addEventListener("submit",(function(t){t.preventDefault();const o=L({name:S.value,link:q.value});E.prepend(o),x(_),t.target.reset(),disableButton(f,e)})),r.forEach((e=>{const t=L(e);E.append(t)})),B=e,console.log(B.formSelector),document.querySelectorAll(B.formSelector).forEach((e=>{((e,n)=>{const r=Array.from(e.querySelectorAll(n.inputSelector)),a=e.querySelector(n.submitButtonSelector);o(r,a,n),r.forEach((c=>{c.addEventListener("input",(function(){((e,o,n)=>{o.validity.valid?t(e,o,n):((e,t,o,n)=>{const r=t.id+"-error";e.querySelector("#"+r).textContent=o,console.log(r),t.classList.add(n.inputErrorClass)})(e,o,o.validationMessage,n)})(e,c,n),o(r,a,n)}))}))})(e,B)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,